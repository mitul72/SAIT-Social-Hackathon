/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/Iv9TiEePJpx
 */
"use client";
import { AvatarImage, AvatarFallback, Avatar } from "@/components/ui/avatar";
import Link from "next/link";
import { CardContent, Card } from "@/components/ui/card";
import Tags from "./tags";
import { Button } from "./ui/button";
import { useState, useEffect } from "react";
import Popup from "./Popup";
import { faClose } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
export function Discussions() {
  const url = "https://saitface-a13849c8bb7c.herokuapp.com/threads";
  const [data, setData] = useState("");
  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fetch("api/threads"); // Replace with your API URL

        const jsonData = await response.json();
        setData(jsonData);
      } catch (err) {
        console.error(err || "An error occurred while fetching the data.");
      }
    };

    fetchData();
    console.log(data);
  }, []); // Empty dependency array ensures the effect runs once on component mount

  let tags = ["Tag 1", "Tag 2", "Tag 3"];
  const [popup, setPopup] = useState(false);

  <Link href="/chat">Create</Link>;

  function handleCreate() {
    setPopup(true);
  }
  return (
    <>
      <section className="container px-4 md:px-6 py-8 relative">
        {popup && <Popup />}
        <div
          onClick={() => {
            setPopup(false);
          }}
          className="absolute  left-8 z-50 -top-3 text-lg cursor-pointer"
        >
          {popup && <FontAwesomeIcon icon={faClose} />}
        </div>
        <header className="flex items-center justify-between">
          <h1 className="text-2xl font-bold">Discussions</h1>
          <Button
            onClick={() => {
              handleCreate();
            }}
            className="mx-10 my-5 w-20"
          >
            Create
            {/* <Link href="/chat">Create</Link> */}
          </Button>
        </header>
        <div className="grid gap-6 mt-6">
          <Card>
            <CardContent className="flex items-center gap-6 mt-5">
              <Avatar className="w-12 h-12 border">
                <AvatarImage
                  alt="User name"
                  src="/placeholder.svg?height=48&width=48"
                />
                <AvatarFallback>UN</AvatarFallback>
              </Avatar>
              <div className="grid gap-1">
                <Link
                  className="font-semibold text-lg hover:underline"
                  href="#"
                >
                  Discussion Title 1
                </Link>
                <div className="flex items-center text-sm text-gray-500">
                  <span>Posted by </span>
                  <Link className="ml-1 font-semibold hover:underline" href="#">
                    username1
                  </Link>
                  <span className="mx-1">â€¢</span>
                  <span>5 hours ago</span>
                </div>
                <div className="flex items-center gap-1 text-sm">
                  <span>
                    <Tags tags={tags} />
                  </span>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </section>
    </>
  );
}

function ReplyIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polyline points="9 17 4 12 9 7" />
      <path d="M20 18v-2a4 4 0 0 0-4-4H4" />
    </svg>
  );
}
